name: Build and Test Docker Package on Staging

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository and build
        id: checkout_repository
        uses: actions/checkout@v4
        run: |
          APP_VERSION=$(grep -Po 'version="\K[^\"]+' src/main.py)
          docker build -t mymi14s/pexels-apis-explorer:$APP_VERSION .
          docker build -t mymi14s/pexels-apis-explorer:latest .
          docker run -d --name pexels-explorer -p8000:8000 mymi14s/pexels-apis-explorer:latest
          if [ "$(docker container ps -q -f name=pexels-explorer)" ]; then
            echo "The container is running."
          else
            echo "The container is not running."
            exit 1
          fi




#       - name: Set up Python
#         id: setup_python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.7

#       - name: Install dependencies
#         id: install_dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install build pytest requests
#         shell: bash
#         continue-on-error: false

#       - name: Build the package
#         id: build_package
#         run: |
#           python -m build
#           if [ $? -ne 0 ]; then
#             echo "Build failed"
#             exit 1
#           fi
#         shell: bash

#       - name: Show built files
#         id: show_built_files
#         run: ls dist
#         shell: bash

#       - name: Run tests
#         id: run_tests
#         run: |
#           WHEEL_BUILD_VERSION=$(grep -Po '(?<=^version = ).*' setup.cfg)
#           python -m pip install dist/pexels_apis-${WHEEL_BUILD_VERSION}-py3-none-any.whl --force-reinstall
#           sed -i "s/test_api_key = ''/test_api_key = '${{ secrets.PEXELS_API_KEY }}'/g" tests/test_pexels_api.py
#           pytest --maxfail=1 --disable-warnings -vv tests/test_pexels_api.py
#         shell: bash
#         continue-on-error: false



# stages:
#   - build
#   - test
#   - deploy

# variables:
#   DOCKER_IMAGE: mymi14s/pexels-apis-explorer

# build:
#   stage: build
#   script:
#     - VERSION=$(python -c "import src.main as main; print(main.__version__)")
#     - docker build --target build -t $DOCKER_IMAGE:$VERSION -t $DOCKER_IMAGE:latest .

# test:
#   stage: test
#   script:
#     - docker build --target test -t $DOCKER_IMAGE:test .
#     - docker run --rm $DOCKER_IMAGE:test pytest

# deploy_staging_test:
#   stage: deploy
#   script:
#     - VERSION=$(python -c "import src.main as main; print(main.__version__)")
#     - docker build --target staging -t $DOCKER_IMAGE:$VERSION -t $DOCKER_IMAGE:latest .
#     - docker run -d --name pexels-explorer -p8000:8000 $DOCKER_IMAGE:latest
#   only:
#     - staging
